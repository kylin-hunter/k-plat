buildscript {
    apply from: "./script/gradle-script/ext-config.gradle"
    apply from: "./script/gradle-script/ext-version.gradle"
    apply from: "./script/gradle-script/ext-func-allprojects.gradle"
    repositories {
        mavenLocal()
        maven {
            url "https://maven.aliyun.com/repository/public-snapshots"
        }
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
    }
    dependencies {
        classpath(app_plugins['spring-boot-gradle-plugin'])
        classpath(app_plugins['gradle-docker-plugin'])
    }

}



plugins {
    id 'java'
    id 'maven'
}

allprojects {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenLocal()
        maven {
            url "https://maven.aliyun.com/repository/public-snapshots"
        }
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply from: "../script/gradle-script/ext-func-subprojects.gradle"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    dependencyManagement {
        imports {
            //spring bom helps us to declare dependencies without specifying version numbers.
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"

        }
    }
    jar {
        manifest.attributes provider: 'gradle'
    }

    dependencies {

        implementation("ch.qos.logback:logback-classic")
        implementation("org.projectlombok:lombok")
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation("org.projectlombok:lombok")
        testAnnotationProcessor 'org.projectlombok:lombok'

        testImplementation('org.springframework.boot:spring-boot-starter-test')

        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation(rootProject.dep['jmockit'])

    }

    test {

        useJUnitPlatform()
        testLogging {
            outputs.upToDateWhen {false}
            showStandardStreams = true
        }

    }

    task taskChangeActiveProfile {
        doLast {
            changeActiveProfile(project.profile)
        }
    }
    classes.finalizedBy(taskChangeActiveProfile)

    addDockerBuildTask(project.name)

}

group 'com.kylinhunter.plat'
version '1.0.1-SNAPSHOT'

wrapper{
    gradleVersion = '6.9'
    archiveBase = 'GRADLE_USER_HOME'
    archivePath = 'wrapper/dists'
    distributionBase = 'GRADLE_USER_HOME"'
    distributionPath = 'wrapper/dists'
    distributionUrl = 'https://services.gradle.org/distributions/gradle-6.9-bin.zip'
}
